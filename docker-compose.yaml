services:
  backend:
    tty: true
    build: backend
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app:rw
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - dev.env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      twilight:
        condition: service_started

  bot:
    tty: true
    build: backend
    volumes:
      - ./backend:/app:ro
    command: python manage.py runbot
    restart: unless-stopped
    env_file:
      - dev.env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      twilight:
        condition: service_started

  rq:
    tty: true
    build: backend
    volumes:
      - ./backend:/app:ro
    command: python manage.py rqworker high default
    env_file:
      - dev.env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  mysql:
    image: mysql:9.0
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/mounts/permissions.sql:/docker-entrypoint-initdb.d/permissions.sql:ro
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 1s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 5s
      retries: 10

  twilight:
    image: ghcr.io/twilight-rs/http-proxy
    env_file:
      - dev.env

volumes:
  mysql-data:
