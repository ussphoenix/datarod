services:
  frontend:
    tty: true
    build:
      context: frontend
      target: server
    restart: always
    volumes:
      - media:/usr/share/nginx/media/media:ro
    networks:
      - default
      - proxy
    labels:
      traefik.enable: "true"
      traefik.http.routers.phxfe-http.entrypoints: "web"
      traefik.http.routers.phxfe-http.rule: "Host(`ussphoenixarchive.com`)"
      traefik.http.routers.phxfe-http.middlewares: phxfe-redirect-https
      traefik.http.middlewares.phxfe-redirect-https.redirectscheme.scheme: "https"
      traefik.http.routers.phxfe.entrypoints: "websecure"
      traefik.http.routers.phxfe.rule: "Host(`ussphoenixarchive.com`)"
      traefik.http.routers.phxfe.tls: "true"
      traefik.http.routers.phxfe.tls.certresolver: "le"
      traefik.http.services.phxfe.loadbalancer.server.port: 8080

  backend:
    tty: true
    build: backend
    restart: always
    env_file:
      - prod.env
    volumes:
      - media:/app/media
    depends_on:
      mysql:
        condition: service_healthy
      valkey:
        condition: service_healthy
      twilight:
        condition: service_started
    expose:
      - 8080

  bot:
    tty: true
    build: backend
    command: python manage.py runbot
    restart: always
    env_file:
      - prod.env
    depends_on:
      mysql:
        condition: service_healthy
      valkey:
        condition: service_healthy
      twilight:
        condition: service_started

  rq:
    tty: true
    build: backend
    command: python manage.py rqworker high default
    env_file:
      - prod.env
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      valkey:
        condition: service_healthy

  mysql:
    image: mysql:9.0
    volumes:
      - mysql-data:/var/lib/mysql
    env_file:
      - prod.env
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 1s
      timeout: 5s
      retries: 10

  valkey:
    image: valkey/valkey:8
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
      interval: 1s
      timeout: 5s
      retries: 10

  twilight:
    image: ghcr.io/twilight-rs/http-proxy
    restart: always
    env_file:
      - prod.env

volumes:
  mysql-data:
  media:

networks:
  proxy:
    name: proxy
    external: true
